/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DVORAK 0
#define QWERTY 1
#define ADJUST 2
#define NUMPAD 3

/ {
	keymap {
		compatible = "zmk,keymap";

		DVORAK {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  '  |  ,  |  .   |  P   |  Y   |                   |  F   |  G    |  C    |  R   |   L   |   -   |
// |  CTRL |  A  |  O  |  E   |  U   |  I   |                   |  D   |  H    |  T    |  N   |   S   |   /   |
// | SHIFT |  ;  |  Q  |  J   |  K   |  X   |   "["  |  |  "]"  |  B   |  M    |  W    |  V   |   Z   |   =   |
//                     | ALT  | GUI  |_ADJUST| SPACE |  | ENTER |_NUMPAD| BSPC  | DEL   |
			bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                     &kp N6 &kp N7   &kp N8    &kp N9  &kp N0   &kp GRAVE
&kp TAB   &kp SQT &kp COMMA  &kp DOT  &kp P  &kp Y                      &kp F  &kp G    &kp C     &kp R   &kp L    &kp MINUS
&kp LCTRL &kp A  &kp O  &kp E    &kp U    &kp I                      &kp D  &kp H    &kp T     &kp N   &kp S &kp FSLH
&kp LSHFT &kp SEMI  &kp Q  &kp J    &kp K    &kp X  &kp LBKT   &kp RBKT &kp B  &kp M    &kp W &kp V &kp Z &kp EQUAL
                        &kp LALT &kp LGUI &mo 2  &kp SPACE  &kp RET  &mo 3  &kp BSPC &kp DEL
			>;

		QWERTY {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   |   =   |
//                     | ALT  | GUI  |_ADJUST| SPACE |  | ENTER |_NUMPAD| BSPC  | DEL   |
			bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                     &kp N6 &kp N7   &kp N8    &kp N9  &kp N0   &kp GRAVE
&kp TAB   &kp Q  &kp W  &kp E    &kp R    &kp T                      &kp Y  &kp U    &kp I     &kp O   &kp P    &kp MINUS
&kp LCTRL &kp A  &kp S  &kp D    &kp F    &kp G                      &kp H  &kp J    &kp K     &kp L   &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X  &kp C    &kp V    &kp B  &kp LBKT   &kp RBKT &kp N  &kp M    &kp COMMA &kp DOT &kp FSLH &kp EQUAL
                        &kp LALT &kp LGUI &mo 1  &kp SPACE  &kp RET  &mo 3  &kp BSPC &kp DEL
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		ADJUST {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR |  BT1   |  BT2    |  BT3    |  BT4 |  BT5 |                        |  F1  |  F2 |  F3 |  F4  |  F5  |  F6  |
// |       |   <-   |   v     |  ^      |  ->  |      |                        |  F7  |  F8 |  F9 |  F10 |  F11 |  F12 |
// |  CAPS | DVORAK | QWERTY  | NUMPAD   |      |      |                        |      |     |     |      |      |      |
// |       |E_PWR_ON|E_PWR_OFF|E_PWR_TOG|      |      |PRINTSCRN| |PRNTSCRN+ALT|      |     |     |      |      |
//                            |         |      |      |         | |            |      |     |     |
			bindings = <
&bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4                 &kp F1     &kp F2  &kp F3       &kp F4            &kp F5       &kp F6
&trans     &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT      &trans                      			  &kp F7    &kp F8    &kp F9          &kp F10   &kp F11   &kp F12
&kp CAPS   &tog 0         &tog 1        &tog 3    &trans &trans                   			  &trans    &trans   &trans    &trans    &trans    &trans
&trans     &ext_power EP_ON &ext_power EP_OFF &ext_power EP_TOG &trans       &trans    &kp PSCRN 	  &kp LA(PSCRN)    &trans    &trans   &trans    &trans    &trans
                                              &trans            &trans       &trans    &trans   	  &trans    &trans    &trans    &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		NUMPAD {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |NUMLOCK|       |       |      |   /   | CALC  |
// |       |     |     |      |      |      |                   |       |   7   |   8   |  9   |   *   |       |
// |       |     |     |      |      |      |                   |       |   4   |   5   |  6   |   -   |       |
// |       |     |     |      |      |      |        |  |       |   0   |   1   |   2   |  3   |   +   |   \   |
//                     |      |      |      |        |  |       |       |       |       |
			bindings = <
&trans    &trans &trans &trans  &trans  &trans                       &kp NUMLOCK &trans    &trans    &trans   &trans    &kp C_AL_CALC
&trans    &trans &trans &trans  &trans  &trans                       &trans      &kp N7    &kp N8    &kp N9   &kp MULTIPLY    &trans
&trans    &trans &trans &trans  &trans  &trans                       &trans      &kp N4  &kp N5  &kp N6   &kp MINUS &trans
&trans    &trans &trans &trans  &trans  &trans    &trans   &trans    &kp N0 &kp N1 &kp N2 &kp N3 &kp PLUS  &kp BSLH
                        &trans  &trans  &trans    &trans   &trans    &trans      &trans    &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
	};
};
